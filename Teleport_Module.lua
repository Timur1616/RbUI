local TeleporterModule = {}
local player = game.Players.LocalPlayer

local function getHRP()
	local char = player.Character or player.CharacterAdded:Wait()
	return char:WaitForChild("HumanoidRootPart")
end

local showCoords = false
local coordThread

function TeleporterModule:Init(section)
	-- üü¢ –¢–µ–ª–µ–ø–æ—Ä—Ç –≤–ø–µ—Ä–µ–¥
	section:NewButton("Teleport Forward", "–¢–µ–ª–µ–ø–æ—Ä—Ç—É—î —Ç–µ–±–µ –≤–ø–µ—Ä–µ–¥ –Ω–∞ –≤–∫–∞–∑–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç—É–¥—ñ–≤", function()
		local studs = tonumber(game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("TeleportStuds") or 10)
		local hrp = getHRP()
		if hrp and studs then
			hrp.CFrame = hrp.CFrame * CFrame.new(0, 0, -math.floor(studs))
		end
	end)

	-- üü£ –¢–µ–ª–µ–ø–æ—Ä—Ç –∑–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
	section:NewButton("Teleport to Coords", "–í–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ (X, Y, Z) —É –∫–æ–Ω—Å–æ–ª—å", function()
		rconsoleprint("@@YELLOW@@\n–í–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ X Y Z —Ç–∞ –Ω–∞—Ç–∏—Å–Ω–∏ Enter:\n")
		local input = rconsoleinput()
		local nums = {}
		for num in string.gmatch(input, "-?%d+") do
			table.insert(nums, tonumber(num))
		end
		if #nums == 3 then
			local hrp = getHRP()
			hrp.CFrame = CFrame.new(nums[1], nums[2], nums[3])
			rconsoleprint("@@GREEN@@\n–¢–µ–ª–µ–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –¥–æ ("..table.concat(nums, ", ")..")\n")
		else
			rconsoleprint("@@RED@@\n–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç!\n")
		end
	end)

	-- üü° –ü–æ–∫–∞–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	section:NewToggle("Show Coords", "–ü–æ–∫–∞–∑—É—î —Ç–≤–æ—ó –ø–æ—Ç–æ—á–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ —É –∫–æ–Ω—Å–æ–ª—ñ", function(state)
		showCoords = state
		if state then
			rconsoleprint("@@LIGHT_BLUE@@\n[Teleport] –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ. –ù–∞—Ç–∏—Å–Ω–∏ —â–µ —Ä–∞–∑ —â–æ–± –≤–∏–º–∫–Ω—É—Ç–∏.\n")
			coordThread = task.spawn(function()
				while showCoords do
					local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
					if hrp then
						local pos = hrp.Position
						rconsoleprint(string.format("@@LIGHT_GREY@@X: %d, Y: %d, Z: %d\n", pos.X, pos.Y, pos.Z))
					end
					task.wait(1)
				end
			end)
		else
			if coordThread then task.cancel(coordThread) end
			rconsoleprint("@@RED@@\n[Teleport] –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤–∏–º–∫–Ω–µ–Ω–æ.\n")
		end
	end)

	-- üîµ –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏
	section:NewButton("Copy Coords", "–ö–æ–ø—ñ—é—î —Ç–≤–æ—ó –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É", function()
		local hrp = getHRP()
		local pos = hrp.Position
		setclipboard("("..math.floor(pos.X)..", "..math.floor(pos.Y)..", "..math.floor(pos.Z)..")")
		rconsoleprint("@@CYAN@@\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ —É –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É!\n")
	end)
end

function TeleporterModule:Shutdown()
	showCoords = false
	if coordThread then task.cancel(coordThread) end
end

return TeleporterModule
